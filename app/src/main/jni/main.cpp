#include <jni.h>
#include "com_example_diy_simulator_RemovebackgroundActivity.h"

/* DO NOT EDIT THIS FILE - it is machine generated */
/* Header for class com_example_diy_simulator_RemovebackgroundActivity */


#include <opencv2/opencv.hpp>
#include <iostream>
#include <filesystem>
#include <__locale>
#include <opencv2/imgproc.hpp>

using namespace cv;
using namespace std;



extern "C" {
/*
 * Class:     com_example_diy_simulator_RemovebackgroundActivity
 * Method:    ConvertRGBtoGray
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_example_diy_1simulator_RemovebackgroundActivity_ConvertRGBtoGray
  (
            JNIEnv *env,
            jobject  instance,
            jlong matAddrInput,
            jlong matAddrResult){


        Mat &matInput = *(Mat *)matAddrInput;
        Mat &matResult = *(Mat *)matAddrResult;

        cvtColor(matInput, matResult, COLOR_RGBA2GRAY);


      }
}

extern "C" {
JNIEXPORT void JNICALL
Java_com_example_diy_1simulator_ImageActivity_detectEdgeJNI(
        JNIEnv *env,
        jobject instance,
        jlong inputImage,
        jlong outputImage,
        jint th1, jint th2) {

    // TODO
    Mat &inputMat = *(Mat *) inputImage;
    Mat &outputMat = *(Mat *) outputImage;

    cvtColor(inputMat, outputMat, COLOR_RGB2GRAY);
    Canny(outputMat, outputMat, th1, th2);

}
}

extern "C" {
JNIEXPORT void JNICALL
Java_com_example_diy_1simulator_ImageActivity_salt(
        JNIEnv *env, jobject instance, jlong matAddrGray, jlong mask, jint nbrElem) {

    Mat &mGr = *(Mat *) matAddrGray;
    Mat &maskR = *(Mat *) mask;

    int r = mGr.rows;
    int c = mGr.cols;

    Mat bgdModel, fgdModel;

    Rect rect = Rect(10, 10,c-10, r-10);

    cvtColor(mGr , mGr , COLOR_RGB2RGBA);
    maskR.create(mGr.size(), CV_8UC1);

    grabCut(mGr, maskR, rect, bgdModel, fgdModel, 2, GC_INIT_WITH_RECT);

    mGr.copyTo(mGr, maskR);

}
}